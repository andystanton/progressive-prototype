html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    title!= title
    link(href='/bower_components/bootstrap/dist/css/bootstrap.min.css', rel='stylesheet')
    script(src='/bower_components/angular/angular.min.js')
    script(src='/bower_components/jquery/dist/jquery.min.js')
    script(src='/bower_components/bootstrap/dist/js/bootstrap.min.js')
    script(src='/socket.io/socket.io.js')
    script(type='text/javascript').
      var socket = io();
    script(type='text/javascript').
      if('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/sw.js', { scope: '/' })
          .then(function(registration) {
            console.log("Service Worker Registered");
          });

        navigator.serviceWorker.ready.then(registration => {
          console.log("Service Worker Ready");
        });
      }
    script(type='text/javascript').
      function S4() {
        return (((1+Math.random())*0x10000)|0).toString(16).substring(1); 
      }
      function guid() {
        return (S4() + S4() + "-" + S4() + "-4" + S4().substr(0,3) + "-" + S4() + "-" + S4() + S4() + S4()).toLowerCase();
      }
    script(type='text/javascript').
      var app = angular.module('myApp', []);
      app.controller('posts', ($scope, $http, $timeout) => {
        (function tick() {
          $http.get("http://localhost:3000/posts")
            .then(response => {
              $scope.posts = response.data;
            });
          $http.get("http://localhost:3000/drafts")
            .then(response => {
              $scope.drafts = response.data;
            });
          if ($scope.offlineDrafts) {
            $scope.offlineDrafts.forEach(x => $scope.savePost(x))
          }
          //- socket.emit('test channel', "ping");
          $timeout(tick, 1000);
        })();

        $scope.newPost = () => {
          $scope.editpost = {
            state: 'draft'
          };
          $scope.mode = 'new'
        }

        $scope.selectPost = post => {
          $scope.editpost = JSON.parse(JSON.stringify(post));
          $scope.mode = 'edit';
        }

        $scope.savePost = (post) => {
          console.log(`saving ${post.title}`);
          console.log(post);
          var writePost = post;
          if ('tempId' in writePost) {
            delete writePost['tempId'];
          }
          $http.put("/post", writePost).then(response => {
            var online = JSON.parse(response.headers('X-Online'));
            console.log(online)
            if (!online) {
              console.log("handling offline save draft")
              if (!('offlineDrafts' in $scope)) {
                console.log("creating offline drafts")
                $scope.offlineDrafts = new Array();
              }

              if ('tmpId' in post && $scope.offlineDrafts.find(x => x.tmpId == post.tmpId)) {
                console.log("removing post from drafts")
                $scope.offlineDrafts = $scope.offlineDrafts.filter(x => x.tempId != post.tempId);
              }
              console.log("adding post to offline drafts")
              post.tempId = guid();
              //- $scope.offlineDrafts.push(post)

            } else {
              if ('tmpId' in post && 'offlineDrafts' in $scope) {
                $scope.offlineDrafts = $scope.offlineDrafts.filter(x => x.tempId != post.tempId);
              }
            }
          });
          if ($scope.mode == 'new') {
            $scope.newPost()
          }
        }

        $scope.publishPost = (post) => {
          console.log(`publishing ${post.title}`);
          console.log(post);
          post.state = 'published';
          $http.put("/post", post).then((response) => {
            console.log(response.headers('X-Online'))
          });
          if ($scope.mode == 'new') {
            $scope.newPost()
          }
        }

        $scope.withdrawPost = (post) => {
          console.log(`withdrawing ${post.title}`);
          console.log(post);
          post.state = 'draft';
          $http.put("/post", post).then((response) => {
            console.log(response.headers('X-Online'))
          });
          if ($scope.mode == 'new') {
            $scope.newPost()
          }
        }

        $scope.deletePost = (id) => {
          console.log(`deleting ${id}`)
          $http.delete(`/post/${id}`).then((response) => {
            console.log(response.headers('X-Online'))
          });
          $scope.newPost()
        }
      });
  body
    h1!= title
    div(ng-app='myApp', ng-controller='posts', ng-init='newPost()')
      div(class='row')
        div(class='col-md-4')
          div(id='editOptions')
            h4
              | {{ mode == 'edit' ? 'Edit Post' : 'Create Post' }}
            p
              | Title:
              br
              input(type='text', ng-model='editpost.title')
              br
              | Content:
              br
              input(type='textarea', ng-model='editpost.content')
              br
              br
              input(type='button', value='Save Draft', ng-click="savePost(editpost)", ng-if="mode == 'new'")
              input(type='button', value='Update', ng-click="savePost(editpost)", ng-if="mode == 'edit'")
              input(type='button', value='Delete', ng-click="deletePost(editpost._id)", ng-if="mode == 'edit'")
              input(type='button', value='Publish', ng-click="publishPost(editpost)", ng-if="editpost.state == 'draft'")
              input(type='button', value='Withdraw', ng-click="withdrawPost(editpost)", ng-if="editpost.state == 'published'")
              br
              br
              input(type='button', value='New post', ng-click="newPost()")
        div(class='col-md-4')
          h4
            | Drafts
          ul
            li(ng-repeat='x in offlineDrafts', ng-click="selectPost(x)")
              | {{ x.title }}
            li(ng-repeat='x in drafts', ng-click="selectPost(x)")
              | {{ x.title }}
        div(class='col-md-4')
          h4
            | Published
          ul
            li(ng-repeat='x in posts', ng-click="selectPost(x)")
              | {{ x.title }}
